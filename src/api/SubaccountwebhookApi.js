/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ModelsDeleteResponse', 'model/ModelsWebhook'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ModelsDeleteResponse'), require('../model/ModelsWebhook'));
  } else {
    // Browser globals (root is window)
    if (!root.SendPostApi) {
      root.SendPostApi = {};
    }
    root.SendPostApi.SubaccountwebhookApi = factory(root.SendPostApi.ApiClient, root.SendPostApi.ModelsDeleteResponse, root.SendPostApi.ModelsWebhook);
  }
}(this, function(ApiClient, ModelsDeleteResponse, ModelsWebhook) {
  'use strict';

  /**
   * Subaccountwebhook service.
   * @module api/SubaccountwebhookApi
   * @version 1.0.0
   */

  /**
   * Constructs a new SubaccountwebhookApi. 
   * @alias module:api/SubaccountwebhookApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the webhookRouterCreate operation.
     * @callback module:api/SubaccountwebhookApi~webhookRouterCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsWebhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Webhook
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {module:model/ModelsWebhook} body The Webhook content
     * @param {module:api/SubaccountwebhookApi~webhookRouterCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsWebhook}
     */
    this.webhookRouterCreate = function(xSubAccountApiKey, body, callback) {
      var postBody = body;

      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling webhookRouterCreate");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling webhookRouterCreate");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ModelsWebhook;

      return this.apiClient.callApi(
        '/subaccount/webhook/', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webhookRouterDelete operation.
     * @callback module:api/SubaccountwebhookApi~webhookRouterDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsDeleteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Webhook
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {Number} webhookId The WebhookId you want to delete
     * @param {module:api/SubaccountwebhookApi~webhookRouterDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsDeleteResponse}
     */
    this.webhookRouterDelete = function(xSubAccountApiKey, webhookId, callback) {
      var postBody = null;

      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling webhookRouterDelete");
      }

      // verify the required parameter 'webhookId' is set
      if (webhookId === undefined || webhookId === null) {
        throw new Error("Missing the required parameter 'webhookId' when calling webhookRouterDelete");
      }


      var pathParams = {
        'webhookId': webhookId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ModelsDeleteResponse;

      return this.apiClient.callApi(
        '/subaccount/webhook/{webhookId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webhookRouterGet operation.
     * @callback module:api/SubaccountwebhookApi~webhookRouterGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsWebhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find Webhook by WebhookId
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {Number} webhookId the WebhookId you want to get
     * @param {module:api/SubaccountwebhookApi~webhookRouterGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsWebhook}
     */
    this.webhookRouterGet = function(xSubAccountApiKey, webhookId, callback) {
      var postBody = null;

      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling webhookRouterGet");
      }

      // verify the required parameter 'webhookId' is set
      if (webhookId === undefined || webhookId === null) {
        throw new Error("Missing the required parameter 'webhookId' when calling webhookRouterGet");
      }


      var pathParams = {
        'webhookId': webhookId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ModelsWebhook;

      return this.apiClient.callApi(
        '/subaccount/webhook/{webhookId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webhookRouterGetAll operation.
     * @callback module:api/SubaccountwebhookApi~webhookRouterGetAllCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsWebhook>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All Webhooks
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {module:api/SubaccountwebhookApi~webhookRouterGetAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsWebhook>}
     */
    this.webhookRouterGetAll = function(xSubAccountApiKey, callback) {
      var postBody = null;

      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling webhookRouterGetAll");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [ModelsWebhook];

      return this.apiClient.callApi(
        '/subaccount/webhook/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the webhookRouterUpdate operation.
     * @callback module:api/SubaccountwebhookApi~webhookRouterUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsWebhook} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Webhook
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {Number} webhookId The WebhookId you want to update
     * @param {module:model/ModelsWebhook} body The body
     * @param {module:api/SubaccountwebhookApi~webhookRouterUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsWebhook}
     */
    this.webhookRouterUpdate = function(xSubAccountApiKey, webhookId, body, callback) {
      var postBody = body;

      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling webhookRouterUpdate");
      }

      // verify the required parameter 'webhookId' is set
      if (webhookId === undefined || webhookId === null) {
        throw new Error("Missing the required parameter 'webhookId' when calling webhookRouterUpdate");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling webhookRouterUpdate");
      }


      var pathParams = {
        'webhookId': webhookId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ModelsWebhook;

      return this.apiClient.callApi(
        '/subaccount/webhook/{webhookId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
