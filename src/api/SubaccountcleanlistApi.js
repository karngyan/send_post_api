/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ModelsBulkResponse', 'model/ModelsCleanedList', 'model/ModelsEmailList'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ModelsBulkResponse'), require('../model/ModelsCleanedList'), require('../model/ModelsEmailList'));
  } else {
    // Browser globals (root is window)
    if (!root.SendPostApi) {
      root.SendPostApi = {};
    }
    root.SendPostApi.SubaccountcleanlistApi = factory(root.SendPostApi.ApiClient, root.SendPostApi.ModelsBulkResponse, root.SendPostApi.ModelsCleanedList, root.SendPostApi.ModelsEmailList);
  }
}(this, function(ApiClient, ModelsBulkResponse, ModelsCleanedList, ModelsEmailList) {
  'use strict';

  /**
   * Subaccountcleanlist service.
   * @module api/SubaccountcleanlistApi
   * @version 1.0.0
   */

  /**
   * Constructs a new SubaccountcleanlistApi. 
   * @alias module:api/SubaccountcleanlistApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the listCleaningRouterCleanBulkEmailList operation.
     * @callback module:api/SubaccountcleanlistApi~listCleaningRouterCleanBulkEmailListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsBulkResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload a csv of emails which will be processed and sent as a mail
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {Object} opts Optional parameters
     * @param {File} opts.fileinput true
     * @param {module:api/SubaccountcleanlistApi~listCleaningRouterCleanBulkEmailListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsBulkResponse}
     */
    this.listCleaningRouterCleanBulkEmailList = function(xSubAccountApiKey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling listCleaningRouterCleanBulkEmailList");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      var formParams = {
        'fileinput': opts['fileinput']
      };

      var authNames = [];
      var contentTypes = ['multipart/form-data'];
      var accepts = [];
      var returnType = ModelsBulkResponse;

      return this.apiClient.callApi(
        '/subaccount/cleanlist/bulk', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listCleaningRouterCleanEmailist operation.
     * @callback module:api/SubaccountcleanlistApi~listCleaningRouterCleanEmailistCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsCleanedList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send a list of emails and will get a result containing valid,invalid and detailed list response
     * @param {String} xSubAccountApiKey Sub-Account API Key
     * @param {module:model/ModelsEmailList} body The list of emails to clean
     * @param {module:api/SubaccountcleanlistApi~listCleaningRouterCleanEmailistCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsCleanedList}
     */
    this.listCleaningRouterCleanEmailist = function(xSubAccountApiKey, body, callback) {
      var postBody = body;

      // verify the required parameter 'xSubAccountApiKey' is set
      if (xSubAccountApiKey === undefined || xSubAccountApiKey === null) {
        throw new Error("Missing the required parameter 'xSubAccountApiKey' when calling listCleaningRouterCleanEmailist");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling listCleaningRouterCleanEmailist");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'X-SubAccount-ApiKey': xSubAccountApiKey
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = ModelsCleanedList;

      return this.apiClient.callApi(
        '/subaccount/cleanlist/', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
