/*
 * SendPost API
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPostApi);
  }
}(this, function(expect, SendPostApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPostApi.ClusterApi();
  });

  describe('(package)', function() {
    describe('ClusterApi', function() {
      describe('clusterRouterAddItemsToAccountWebhookCacheOfEveryNodeInCluster', function() {
        it('should call clusterRouterAddItemsToAccountWebhookCacheOfEveryNodeInCluster successfully', function(done) {
          // TODO: uncomment, update parameter values for clusterRouterAddItemsToAccountWebhookCacheOfEveryNodeInCluster call
          /*
          var body = new SendPostApi.ModelsAccountWebhook();
          body.clicked = false;
          body.created = "0";
          body.delivered = false;
          body.dropped = false;
          body.enabled = false;
          body.hardBounced = false;
          body.id = "0";
          body.opened = false;
          body.processed = false;
          body.softBounced = false;
          body.spam = false;
          body.unsubscribed = false;
          body.url = "";

          instance.clusterRouterAddItemsToAccountWebhookCacheOfEveryNodeInCluster(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('clusterRouterAddItemsToSuppressionFilterOfEveryNodeInCluster', function() {
        it('should call clusterRouterAddItemsToSuppressionFilterOfEveryNodeInCluster successfully', function(done) {
          // TODO: uncomment, update parameter values for clusterRouterAddItemsToSuppressionFilterOfEveryNodeInCluster call
          /*
          var body = new SendPostApi.ModelsSuppression();
          body.created = "0";
          body.email = "";
          body.id = "0";
          body.reason = new SendPostApi.ModelsSuppressionReason();
          body.smtpError = "";

          instance.clusterRouterAddItemsToSuppressionFilterOfEveryNodeInCluster(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('clusterRouterDeleteItemsFromSuppressionFilterOfEveryNodeInCluster', function() {
        it('should call clusterRouterDeleteItemsFromSuppressionFilterOfEveryNodeInCluster successfully', function(done) {
          // TODO: uncomment, update parameter values for clusterRouterDeleteItemsFromSuppressionFilterOfEveryNodeInCluster call
          /*
          var body = new SendPostApi.ModelsSuppression();
          body.created = "0";
          body.email = "";
          body.id = "0";
          body.reason = new SendPostApi.ModelsSuppressionReason();
          body.smtpError = "";

          instance.clusterRouterDeleteItemsFromSuppressionFilterOfEveryNodeInCluster(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('clusterRouterDeleteItemsFromWebhookFilterOfEveryNodeInCluster', function() {
        it('should call clusterRouterDeleteItemsFromWebhookFilterOfEveryNodeInCluster successfully', function(done) {
          // TODO: uncomment, update parameter values for clusterRouterDeleteItemsFromWebhookFilterOfEveryNodeInCluster call
          /*
          var body = new SendPostApi.ModelsAccountWebhook();
          body.clicked = false;
          body.created = "0";
          body.delivered = false;
          body.dropped = false;
          body.enabled = false;
          body.hardBounced = false;
          body.id = "0";
          body.opened = false;
          body.processed = false;
          body.softBounced = false;
          body.spam = false;
          body.unsubscribed = false;
          body.url = "";

          instance.clusterRouterDeleteItemsFromWebhookFilterOfEveryNodeInCluster(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
